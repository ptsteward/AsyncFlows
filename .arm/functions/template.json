{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app to deploy."
      }
    },
    "certificateKeyVaultName": {
      "type": "string",
      "metadata": {
        "description": "The name of the KeyVault the certificate is stored in."
      }
    },
    "certificateKeyVaultResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group containing the KeyVault holding the encryption certificate."
      }
    },
    "certificateKeyVaultSecret": {
      "type": "string",
      "metadata": {
        "description": "The key of the KeyVault secret entry containing the base 64 encoded certificate."
      }
    },
    "certificateName": {
      "type": "string",
      "metadata": {
        "description": "The name of an encryption certificate to install."
      }
    },
    "functionEnvironmentName": {
      "type": "string",
      "metadata": {
        "description": "The name of the environment to configure the function for."
      }
    },
    "hostingEnvironment": {
      "type": "string",
      "metadata": {
        "description": "Linux / .NET whatever. If blank is .NET by default"
      }
    },
    "hostingPlanName": {
      "type": "string",
      "metadata": {
        "description": "The name of the hosting plan you will create to host the function"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The azure location for the deployment (e.g. west us, east us)"
      }
    },
    "serverFarmResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the function should live in"
      }
    },
    "sku": {
      "type": "string",
      "metadata": {
        "description": "The computing tier to deploy the function to"
      }
    },
    "skuCode": {
      "type": "string",
      "metadata": {
        "description": "A value representing a specific compute size within the above computing tier"
      }
    },
    "storageName": {
      "type": "string",
      "metadata": {
        "description": "The name of dedicated storage plan that will be linked to this function"
      }
    },
    "subscriptionId": {
      "type": "string",
      "metadata": {
        "description": "The subscription id of tenant"
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "Environment": "Not Defined",
        "Architecture": "Not Defined"
      }
    }
  },
  "variables": {
    "functionsTagOverrides": {
      "Architecture": "Function",
      "Environment": "[parameters('functionEnvironmentName')]"
    },
    "environment": "[toUpper(parameters('functionEnvironmentName'))]",
    "functionsTags": "[union(parameters('resourceTags'), variables('functionsTagOverrides'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('certificateName')]",
      "type": "Microsoft.Web/certificates",
      "tags": "[variables('functionsTags')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', parameters('appName'))]"
      ],
      "properties": {
        "keyVaultId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('certificateKeyVaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('certificateKeyVaultName'))]",
        "keyVaultSecretName": "[parameters('certificateKeyVaultSecret')]"
      }
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[parameters('appName')]",
      "type": "Microsoft.Web/sites",
      "tags": "[variables('functionsTags')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ],
      "properties": {
        "name": "[parameters('appName')]",
        "clientAffinityEnabled": false,
        "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
        "hostingEnvironment": "[parameters('hostingEnvironment')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[variables('environment')]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTION_ENVIRONMENT_NAME",
              "value": "[variables('environment')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "MSDEPLOY_RENAME_LOCKED_FILES",
              "value": "1"
            },
            {
              "name": "WEBSITE_LOAD_CERTIFICATES",
              "value": "*"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "8.11.1"
            },
            {
              "name": "AdvocateScraperEnabled",
              "value": "[parameters('advocateScraperEnabled')]"
            }
          ],
          "alwaysOn": true
        }
      }
    },
    {
      "apiVersion": "2018-02-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "tags": "[variables('functionsTags')]",
      "kind": "app",
      "location": "[resourceGroup().location]",
      "sku": {
        "tier": "[parameters('sku')]",
        "name": "[parameters('skuCode')]",
        "size": "[parameters('skuCode')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Storage/storageAccounts",
      "tags": "[variables('functionsTags')]",
      "name": "[parameters('storageName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    }
  ]
}
